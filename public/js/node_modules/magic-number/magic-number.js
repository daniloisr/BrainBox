/*
    Magic number detection for Node.js
    Copyright 2015 Sam Saint-Pettersen

    Released under the MIT License.
*/
var fs = require('fs');
function toChar(dec) {
    return String.fromCharCode(dec);
}
var MagicNumber = (function () {
    function MagicNumber() {
    }
    MagicNumber.loadFileTypes = function () {
        if (fs.existsSync('file.types')) {
            MagicNumber.mimes = new Array();
            MagicNumber.ids = new Array();
            var data = fs.readFileSync('file.types');
            var lines = data.toString().split('\n');
            for (var i = 0; i < lines.length; i++) {
                var mi = lines[i].split(':');
                if (mi[0] != '') {
                    MagicNumber.mimes.push(mi[0]);
                    MagicNumber.ids.push(mi[1]);
                }
            }
        }
        else {
            console.log('Error in magicnumber module: file.types file missing.');
            process.exit(-1);
        }
    };
    MagicNumber.detectFile = function (file) {
        MagicNumber.loadFileTypes();
        var type = 'unknown';
        if (fs.existsSync(file)) {
            var data = fs.readFileSync(file);
            for (var i = 0; i < MagicNumber.ids.length; i++) {
                var file_mn = '';
                var compare_mn = MagicNumber.ids[i];
                for (var x = 0; x < compare_mn.length; x++) {
                    file_mn += toChar(data[x]);
                }
                if (file_mn == compare_mn) {
                    type = MagicNumber.mimes[i];
                    break;
                }
            }
        }
        return type;
    };
    return MagicNumber;
})();
module.exports = MagicNumber;
